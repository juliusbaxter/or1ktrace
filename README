				or1ktrace
				=========

About:
======
This is a library intended to be used by OpenRISC 1000 simulation models to 
generate execution traces.

It doesn't fully work yet.

It's handy because you don't have to write a disassembler in every single
model you have - just link to this guy and generate consistent traces across
all models, which makes them easy to debug and compare.

That's the idea, anyway.

Building:
=========

So far, the library builds and the basic disassembly test runs. But it is not
automated or pretty.

* Configuring
  Run ./configure but also pass the location of a binutils compile directory
  so it can pickup the libbfd and libopcodes archives and headers it contains.

      ./configure \
      BINUTILS_BLD_DIR=$HOME/svn/opencores/openrisc/trunk/gnu-src/bd-elf

  Next, run make to build the libraries.

      make

  But the test executable won't build because it needs some libraries after
  libor1ktrace is added:

  I then compile it with:

      gcc -g -O2 -o testasm test-asm.c  \
      -L$HOME/svn/opencores/openrisc/trunk/gnu-src/bd-elf/bfd \
      -L$HOME/svn/opencores/openrisc/trunk/gnu-src/bd-elf/opcodes \
      -lbfd -lopcodes -liberty -lz ./.libs/libor1ktrace.a -lbfd -lopcodes \
      -lbfd -liberty -lz

  Run the disassembly test executable with:

      ./testasm

  

TODO:
=====

 * Plumb it into or1ksim for starters, and check the full trace line works.
   Next try to get it into Verilog and cycle accurate RTL models.
 * Double check whether all the callbacks are really needed.
 * Maybe add a binary trace option where we sort out a data structure that 
   can be dumped to a file for greater speed. This would also involve somehow
   decoding the function back into trace lines.
